openapi: 3.0.3
info:
  title: API v1
  version: 1.0.0
servers:
- url: /
paths:
  /auth/login:
    post:
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      responses:
        "200":
          description: Login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCredentials'
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/check:
    post:
      responses:
        "204":
          description: ok response
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /grants:
    get:
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Grants response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /grants/{grant_id}:
    get:
      parameters:
      - name: grant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Grant by id response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
  /grants/{grant_id}/filters:
    put:
      parameters:
      - name: grant_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/GrantFiltersRequest'
      responses:
        "204":
          description: ok response
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - bearerAuth: []
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    PaginationMeta:
      required:
      - current_page
      - total_pages
      type: object
      properties:
        current_page:
          type: integer
        total_pages:
          type: integer
      example:
        total_pages: 1
        current_page: 6
    LoginCredentials:
      required:
      - login
      - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    AuthCredentials:
      required:
      - token
      type: object
      properties:
        token:
          type: string
      example:
        token: token
    CheckboxValues:
      type: array
      items:
        type: integer
    IntegerValue:
      type: integer
    FilterMapping:
      type: object
      additionalProperties:
        required:
        - mapping
        - title
        type: object
        properties:
          title:
            type: string
          mapping:
            type: object
            additionalProperties:
              required:
              - title
              type: object
              properties:
                title:
                  type: string
              example:
                title: title
        example:
          mapping:
            key:
              title: title
          title: title
      x-schema-name: FilterMapping
    GrantFilters:
      type: object
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/CheckboxValues'
        - $ref: '#/components/schemas/IntegerValue'
      x-schema-name: GrantFilters
    Grant:
      required:
      - filter_values
      - id
      - source_url
      - title
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        source_url:
          type: string
        filter_values:
          $ref: '#/components/schemas/GrantFilters'
      example:
        filter_values:
          key: ""
        id: 0
        title: title
        source_url: source_url
    inline_response_200:
      required:
      - filters_mapping
      - filters_order
      - grants
      - meta
      type: object
      properties:
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        filters_mapping:
          $ref: '#/components/schemas/FilterMapping'
        filters_order:
          type: array
          items:
            type: string
        meta:
          $ref: '#/components/schemas/PaginationMeta'
      example:
        grants:
        - filter_values:
            key: ""
          id: 0
          title: title
          source_url: source_url
        - filter_values:
            key: ""
          id: 0
          title: title
          source_url: source_url
        meta:
          total_pages: 1
          current_page: 6
        filters_mapping:
          key:
            mapping:
              key:
                title: title
            title: title
        filters_order:
        - filters_order
        - filters_order
    inline_response_200_1:
      required:
      - filters_mapping
      - filters_order
      - grant
      type: object
      properties:
        grant:
          $ref: '#/components/schemas/Grant'
        filters_mapping:
          $ref: '#/components/schemas/FilterMapping'
        filters_order:
          type: array
          items:
            type: string
      example:
        filters_mapping:
          key:
            mapping:
              key:
                title: title
            title: title
        grant:
          filter_values:
            key: ""
          id: 0
          title: title
          source_url: source_url
        filters_order:
        - filters_order
        - filters_order
  responses:
    ErrorResponse:
      description: Ошибка
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    LoginResponse:
      description: Login response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthCredentials'
    OkResponse:
      description: ok response
    GrantByIdResponse:
      description: Grant by id response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_1'
    GrantsResponse:
      description: Grants response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
  parameters:
    Page:
      name: page
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 1
  requestBodies:
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginCredentials'
    GrantFiltersRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/GrantFilters'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
